/// <reference types="webdriverio/sync" />
export declare type ElementSelectorData = string | ((...args: any) => any);
/**
 * When called, returns a WebdriverIO.Element.
 * @property toString() can be used to get the human readable text for this query.
 */
export declare type ElementQuery = (() => WebdriverIO.Element) & {
    toString: () => string;
};
/**
 * Get an element query for the specified text
 * @param name The text to get the selectors by. Separate nesting child selectors by " -> ".
 * @returns An ElementQuery for a single element
 * @todo Handle cases, where each selector might return multiple elements?
 * I.e. act like (elementsQuery(name)()[0] || empty-result), but ideally more performant.
 */
export declare function elementQuery(name: string): ElementQuery;
/**
 * When called, returns an array of WebdriverIO.Element.
 * @property toString() can be used to get the human readable text for this query.
 */
export declare type ElementsQuery = (() => WebdriverIO.Element[]) & {
    toString: () => string;
};
/**
 * Get an elements query for the specified text
 * @param name The text to get the selectors by. Separate nesting child selectors by " -> ".
 * @returns An ElementsQuery for multiple elements
 */
export declare function elementsQuery(name: string): ElementsQuery;
