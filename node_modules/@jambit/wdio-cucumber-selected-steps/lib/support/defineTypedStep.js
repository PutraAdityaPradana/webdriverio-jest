import { defineStep } from '@cucumber/cucumber';
function wrapStep(paramTypes, fn) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    function wrapped(...args) {
        return fn.apply(this, paramTypes.map((paramType, index) => paramType(args[index])));
    }
    Object.defineProperty(wrapped, 'name', { value: fn.name });
    Object.defineProperty(wrapped, 'length', { value: paramTypes.length });
    return wrapped;
}
export function defineTypedStep(pattern, types, options, code) {
    if (typeof options === 'function') {
        defineStep(pattern, wrapStep(types, options));
    }
    else {
        defineStep(pattern, options, wrapStep(types, code));
    }
}
